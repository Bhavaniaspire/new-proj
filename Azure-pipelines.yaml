
# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  
  acrLoginServer: bhavani3.azurecr.io
  imageName: bhavani3.azurecr.io/repo1:57 
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: my-springboot-app
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'install'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: |
          **/aks-deploy-from-acr.yaml
          **/*.dacpac
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(acrLoginServer)/$(imageName)
        Dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
- stage: Deploy
  displayName: AKS Stage
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
    - deployment: AKS
      displayName: 'AKS Deployment'
      environment: 'dev'
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
       runOnce:
         deploy:
          steps:
          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'Pay-As-You-Go(xxxxxxxxxxxxxxxxxxxxxxxxxxx)'
              azureResourceGroup: 'xxxxxxxxxxxx'
              kubernetesCluster: 'xxxxxxxxx'
              command: 'apply'
              useConfigurationFile: true
              configuration: '$(pipeline.workspace)/drop/aks-deploy-from-acr.yaml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              azureSubscriptionEndpointForSecrets: 'Pay-As-You-Go(xxxxxxxxxxxxxxxxxxxxxxxxxxx)'
              azureContainerRegistry: 'xxxxxxxx.azurecr.io'
              secretName: 'acrsecret'
             
